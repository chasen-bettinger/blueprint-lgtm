// Generated by CoffeeScript 1.4.0
(function() {
  var MobileInset,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  MobileInset = (function(_super) {

    __extends(MobileInset, _super);

    function MobileInset(view_nm, opts) {
      var ss;
      ss = {
        selected_device: 'iphone-6',
        orientation: 'v'
      };
      MobileInset.__super__.constructor.call(this, view_nm, opts, ss);
    }

    MobileInset.prototype.action = function(ctx, act, p) {
      var f, i, m, r;
      f = "action:" + act;
      _log2(f, p);
      r = ctx.r, i = ctx.i, m = ctx.m;
      switch (act) {
        case "choose_device":
          this.selected_device = p.device;
          return this.invalidateTables(true);
        case "toggle_orientation":
          this.orientation = this.orientation === 'v' ? 'h' : 'v';
          return this.invalidateTables(true);
        default:
          return MobileInset.__super__.action.call(this, act, p);
      }
    };

    MobileInset.prototype.loadTable = function(tbl_nm) {
      var f, row;
      f = "loadTable:" + tbl_nm;
      switch (tbl_nm) {
        case 'Opts':
          row = {
            device: this.selected_device,
            orientation: this.orientation
          };
          return this.Table[tbl_nm] = [row];
        default:
          return MobileInset.__super__.loadTable.call(this, tbl_nm);
      }
    };

    return MobileInset;

  })(E.ModelJS);

  E.Model.MobileInset = MobileInset;

}).call(this);
