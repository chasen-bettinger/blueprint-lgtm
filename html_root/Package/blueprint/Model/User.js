// Generated by CoffeeScript 1.4.0
(function() {
  var User,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  User = (function(_super) {

    __extends(User, _super);

    function User(Epic, view_nm) {
      var ss;
      ss = {
        active_app: false,
        username: false,
        active_tab: false
      };
      User.__super__.constructor.call(this, Epic, view_nm);
      this.rest = window.EpicMvc.Extras.Rest;
    }

    User.prototype.action = function(act, p) {
      var debug, i, m, parts, r, result, val, valid;
      debug = "action:" + act;
      console.log(debug, p);
      r = {};
      i = new window.EpicMvc.Issue(this.Epic, this.view_nm, act);
      m = new window.EpicMvc.Issue(this.Epic, this.view_nm, act);
      switch (act) {
        case 'check':
          if ((valid = this.rest.doToken()) !== false) {
            r.valid = 'yes';
          } else {
            r = {
              valid: 'no'
            };
          }
          break;
        case 'parse_hash':
          parts = p.hash.split('-');
          r = (function() {
            switch (parts[0]) {
              case '':
                return {
                  page: 'EMPTY_HASH'
                };
              default:
                return {
                  page: parts[0],
                  code: parts[1]
                };
            }
          })();
          break;
        case 'url_landing':
          r.url = this.active_app ? "app-" + this.active_app : '';
          break;
        case 'url_landing_context':
          val = p.context;
          if ((val != null ? val.length : void 0) && Number(val)) {
            this.active_app = Number(val);
          }
          this.Table = {};
          break;
        case "view_details":
          this.active_app = Number(p.id);
          this.Table = {};
          break;
        case "home":
          this.active_app = false;
          this.Table = {};
          break;
        case "login":
          if (p.AuthEmail === 'me') {
            p.AuthEmail = 'jamie.hollowell@dv-mobile.com';
            p.LoginPass = 'password';
          }
          result = this.rest.login(p.AuthEmail, p.LoginPass);
          console.log(debug, 'result:', result);
          if (result !== false) {
            this.Epic.login();
            r.success = 'SUCCESS';
            this.username = p.AuthEmail;
          } else {
            r.success = 'FAIL';
          }
          console.log(debug, 'r:', r);
          break;
        case "logout":
          this.rest.logout();
          this.Epic.logout();
          this.active_app = this.username = false;
          this.Table = {};
          break;
        default:
          return User.__super__.action.call(this, act, p);
      }
      return [r, i, m];
    };

    User.prototype.loadTable = function(tbl_nm) {
      var debug, results, table;
      debug = "loadTable:" + tbl_nm;
      switch (tbl_nm) {
        case 'Me':
          results = this.rest.get('User/me', debug);
          table = [];
          if (results.success) {
            table.push(results.user);
          }
          console.log(debug, 'table:', table);
          return this.Table[tbl_nm] = table;
        default:
          return User.__super__.loadTable.call(this, tbl_nm);
      }
    };

    User.prototype.fistLoadData = function(oFist) {
      switch (oFist.getFistNm()) {
        case 'Login':
          return null;
        default:
          return User.__super__.fistLoadData.call(this, oFist);
      }
    };

    User.prototype.fistGetFieldChoices = function(oFist, field_nm) {
      switch (field_nm) {
        case 'DevPull':
          return {
            options: ['Development', 'Production'],
            values: ['yes', 'no']
          };
        default:
          return User.__super__.fistGetFieldChoices.call(this, oFist, field_nm);
      }
    };

    return User;

  })(window.EpicMvc.ModelJS);

  window.EpicMvc.Model.User = User;

}).call(this);
