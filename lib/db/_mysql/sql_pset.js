// Generated by CoffeeScript 1.6.3
(function() {
  var E, Q, SqlPSet;

  Q = require('q');

  E = require('../../error');

  SqlPSet = (function() {
    function SqlPSet(db, log) {
      this.db = db;
      this.log = log;
      this.table = 'psets';
      this.schema = {
        create: ['name'],
        get_by_id: ['*']
      };
      this.db.method_factory(this, 'SqlPSet');
    }

    SqlPSet.prototype.get_by_name = function(ctx, name) {
      var f,
        _this = this;
      f = "DB:SqlPushSet:get_by_name:";
      this.log.debug(f, name);
      return Q.resolve().then(function() {
        var sql;
        sql = 'SELECT * FROM ' + _this.table + ' WHERE name= ? AND di= 0';
        return _this.db.sqlQuery(ctx, sql, [name]);
      }).then(function(db_rows) {
        return db_rows;
      });
    };

    SqlPSet.prototype.read_or_insert = function(ctx, name) {
      var existing_pset, f, _log,
        _this = this;
      f = "DB:SqlPushSet:read_or_insert:";
      _log = ctx.log;
      _log.debug(f, name);
      existing_pset = false;
      return Q.resolve().then(function() {
        return _this.get_by_name(ctx, name);
      }).then(function(db_rows) {
        _log.debug(f, 'got existing PSet:', db_rows);
        if (db_rows.length > 0) {
          existing_pset = db_rows[0];
        }
        if (existing_pset) {
          return false;
        }
        return _this.create(ctx, {
          name: name
        });
      }).then(function(db_result) {
        var id;
        _log.debug(f, 'got create PSet result:', db_result);
        if (db_result === false) {
          return false;
        }
        id = db_result.insertId;
        return _this.get_by_id(ctx, id);
      }).then(function(db_rows) {
        _log.debug(f, 'got re-read:', db_rows);
        if (db_rows !== false) {
          if (db_rows.length !== 1) {
            throw new E.DbError('DB:PUSHSET:REREAD');
          }
          existing_pset = db_rows[0];
        }
        return existing_pset;
      });
    };

    return SqlPSet;

  })();

  exports.SqlPSet = SqlPSet;

}).call(this);
