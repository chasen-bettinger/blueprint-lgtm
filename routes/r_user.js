// Generated by CoffeeScript 1.6.3
(function() {
  var E, Q, User, caller, odb, sdb;

  Q = require('q');

  E = require('../lib/error');

  odb = false;

  sdb = false;

  caller = {
    get: {
      name: 'user:get',
      sql_conn: true,
      auth_required: true,
      load_user: true
    },
    create: {
      name: 'user:create',
      sql_conn: true,
      auth_required: true
    }
  };

  User = (function() {
    function User(kit) {
      kit.logger.log.info('Initializing User Routes...');
      odb = kit.db.mongo;
      sdb = kit.db.mysql;
      this.get = kit.wrapper.read_wrap(caller.get, this._get);
      this.createUser = kit.wrapper.update_wrap(caller.create, this._create);
    }

    User.prototype._get = function(conn, p, pre_loaded, _log) {
      var f;
      f = 'User:_get:';
      return Q.resolve().then(function() {
        return {
          send: {
            success: true,
            users: [pre_loaded.user]
          }
        };
      });
    };

    User.prototype._create = function(conn, p, pre_loaded, _log) {
      var f;
      f = 'User:_create:';
      if (!p.email) {
        throw new E.InvalidArg('Invalid Email', 'email');
      }
      if (!p.password) {
        throw new E.InvalidArg('Invalid Password', 'password');
      }
      return Q.resolve().then(function() {
        return sdb.user.create(conn, p.first_name, p.last_name, p.email, p.password);
      }).then(function(db_result) {
        return {
          send: {
            success: true
          }
        };
      });
    };

    return User;

  })();

  exports.User = User;

}).call(this);
