// Generated by CoffeeScript 1.4.0
var MockRestifyRequest, MockRestifyResponse, S_GetConn, config, conn, http, mysql;

http = require('http');

mysql = require('mysql');

config = (require('../../config'))();

if (!config.db.mysql.enable) {
  throw new Error('MYSQL NOT ENABLED');
}

config.db.mysql.pool.database += '_test';

exports.config = config;

conn = false;

S_GetConn = function() {
  if (!conn) {
    return conn = mysql.createConnection(config.db.mysql.pool);
  } else {
    return conn;
  }
};

MockRestifyRequest = (function() {

  function MockRestifyRequest(opts) {
    this.headers = (opts != null ? opts.headers : void 0) || {};
    this.url = (opts != null ? opts.url : void 0) || {};
    this.method = (opts != null ? opts.method : void 0) || {};
    this.statusCode = (opts != null ? opts.statusCode : void 0) || {};
    this.params = (opts != null ? opts.params : void 0) || {};
  }

  return MockRestifyRequest;

})();

exports.MockRestifyRequest = MockRestifyRequest;

MockRestifyResponse = (function() {

  function MockRestifyResponse(opts) {
    this.headers = (opts != null ? opts.headers : void 0) || {};
  }

  MockRestifyResponse.prototype.setHeader = function(nm, val) {
    return this.headers[nm] = val;
  };

  MockRestifyResponse.prototype.send = function(data) {
    return this.data = data;
  };

  return MockRestifyResponse;

})();

exports.MockRestifyResponse = MockRestifyResponse;

exports.Setup = function(data, cb) {
  return cb(S_GetConn());
};

exports.TearDown = function() {
  conn.end();
  return conn = false;
};

exports.Create = function(data) {};
